# Generated by Django 5.2.7 on 2025-10-11 17:48

import django.core.validators
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Utilisateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('identifiant_utilisateur', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('email_utilisateur', models.EmailField(max_length=50, unique=True, verbose_name='Email')),
                ('nom_utilisateur', models.CharField(blank=True, max_length=150, null=True, verbose_name='Nom utilisateur')),
                ('numero_telephone_utilisateur', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message='Veuillez entrer un numéro ivoirien valide (ex: +2250102030405 ou 0102030405).', regex='^(?:\\+225|00225)?(01|05|07|25|27)\\d{8}$')], verbose_name='Numero de téléphone')),
                ('role', models.CharField(choices=[('admin', 'admin'), ('gerant', 'gerant'), ('vendeur', 'vendeur')], default='vendeur', max_length=10)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
